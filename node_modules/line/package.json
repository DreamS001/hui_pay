{
  "_args": [
    [
      {
        "raw": "line@^0.1.8",
        "scope": null,
        "escapedName": "line",
        "name": "line",
        "rawSpec": "^0.1.8",
        "spec": ">=0.1.8 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\mulhyac\\Desktop\\新付\\hui_pay"
    ]
  ],
  "_from": "line@>=0.1.8 <0.2.0",
  "_id": "line@0.1.8",
  "_inCache": true,
  "_installable": true,
  "_location": "/line",
  "_npmUser": {
    "name": "amccollum",
    "email": "amccollum+npm@gmail.com"
  },
  "_npmVersion": "1.2.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "line@^0.1.8",
    "scope": null,
    "escapedName": "line",
    "name": "line",
    "rawSpec": "^0.1.8",
    "spec": ">=0.1.8 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/line/-/line-0.1.8.tgz",
  "_shasum": "eb756eafdc97345f1782abfa506788dc4da54c7c",
  "_shrinkwrap": null,
  "_spec": "line@^0.1.8",
  "_where": "C:\\Users\\mulhyac\\Desktop\\新付\\hui_pay",
  "author": {
    "name": "Andrew McCollum",
    "email": "amccollum@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/amccollum/line/issues"
  },
  "dependencies": {
    "ender-events": "*"
  },
  "description": "Control flow like a boss",
  "devDependencies": {
    "coffee-script": "*",
    "ender-vows": "*"
  },
  "directories": {
    "lib": "lib"
  },
  "dist": {
    "shasum": "eb756eafdc97345f1782abfa506788dc4da54c7c",
    "tarball": "https://registry.npmjs.org/line/-/line-0.1.8.tgz"
  },
  "ender": "noop",
  "homepage": "https://github.com/amccollum/line#readme",
  "keywords": [
    "ender",
    "flow",
    "control",
    "async"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "main": "lib/line.js",
  "maintainers": [
    {
      "name": "amccollum",
      "email": "amccollum+npm@gmail.com"
    }
  ],
  "name": "line",
  "optionalDependencies": {},
  "readme": "line\n===\nLine is flow control designed to work with CoffeeScript.\n\nHere's an example:\n\n```CoffeeScript\nLine = require('line').Line\n\ndata2 = null\n\nl = new Line\n\terror: (err) -> console.log('Oh no! One of the callbacks had an error:', err)\n\t\t\n\t-> fs.readdir 'my_dir', @wait()\n    \n\t(files) ->\n\t\t# Callback results can be named, or observed\n\t    fs.readFile \"my_dir/#{files[0]}\", 'utf8', @wait('data1')\n\t    fs.readFile \"my_dir/#{files[1]}\", 'utf8', @wait (data) -> data2 = data\n\t    fs.stat \"my_dir/#{files[2]}\", @wait()\n\n\t# By default, the result of the last wait() call will be passed on\n\t(stats) ->\n\t    console.log('Contents of the first file:', @results.data1)\n\t    console.log('Contents of the second file:', data2)\n\t    console.log('Result of fs.stat for the third file:', stats)\n    \n    # If there is no wait() call, the callback will complete immediately\n\n# Blocks can also be added later\nl.add -> console.log('All the tasks completed without errors.')\n```\n",
  "readmeFilename": "README.md",
  "repositories": [
    {
      "type": "git",
      "url": "git+ssh://git@github.com/amccollum/line.git"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/amccollum/line.git"
  },
  "url": "http://github.com/amccollum/line",
  "version": "0.1.8"
}
